function [output] = Histogram_equalization(input_image)
%first test the image is a RGB or gray image
if numel(size(input_image)) == 3
    %this is a RGB image
    %here is just one method, if you have other ways to do the
    %equalization, you can change the following code
    
    %method 1:
    r=input_image(:,:,1);
    v=input_image(:,:,2);
    b=input_image(:,:,3);
    r1 = hist_equal(r);
    v1 = hist_equal(v);
    b1 = hist_equal(b);
    output = cat(3,r1,v1,b1); 
    
    %method 2:
    HSI_image = rgb2hsi(input_image);
    h = HSI
else
    %this is a gray image
    [output] = hist_equal(input_image);
    
end

    function [output2] = hist_equal(input_channel)
    %you should complete this sub-function
    %output2 = histeq(input_channel);
    H = im2double(input_channel);
    [M,N] = size(H);
    [counts,x] = imhist(H);
    location = find(counts ~=0);
    MinCDF = min(counts(location));
    for j = 1:length(location)
        CDF = sum(counts(location(1:j)));
        P = H==x(location(j));
        H(P) = (CDF -MinCDF)/(M*N-MinCDF);
    end
    output2 = H;
    end
    
end